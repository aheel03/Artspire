"""normalize_tags_to_separate_tables

Revision ID: 664d09695f6f
Revises: 8c8688e9fb4c
Create Date: 2025-07-11 22:02:20.506718

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '664d09695f6f'
down_revision: Union[str, None] = '8c8688e9fb4c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_post_tags_id'), table_name='post_tags')
    op.drop_constraint(op.f('unique_post_tag'), 'post_tags', type_='unique')
    op.drop_column('post_tags', 'id')
    op.drop_column('posts', 'tags')
    op.drop_index(op.f('ix_user_tags_id'), table_name='user_tags')
    op.drop_constraint(op.f('unique_user_tag'), 'user_tags', type_='unique')
    op.drop_column('user_tags', 'id')
    op.drop_column('users', 'skills')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('skills', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('user_tags', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.create_unique_constraint(op.f('unique_user_tag'), 'user_tags', ['user_id', 'tag'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('ix_user_tags_id'), 'user_tags', ['id'], unique=False)
    op.add_column('posts', sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('post_tags', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.create_unique_constraint(op.f('unique_post_tag'), 'post_tags', ['post_id', 'tag'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('ix_post_tags_id'), 'post_tags', ['id'], unique=False)
    # ### end Alembic commands ###
